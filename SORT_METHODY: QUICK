#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <stdbool.h>

	// Valor da constate de máximo do vetor e valor máximo para sorteio de random
	const int max = 100;
	const int max_rand = 100;

// Função QUICK SORT--------------------------------------------------------------------
// Baseia-se na divisão e conquista
// Método recursivo
int dividir(int vetor[],int esq, int dir){
    int aux; //troca de posicoes
    int cont = esq, i;

    for(i=esq+1 ; i<=dir ; i++){

        if( vetor[i] < vetor[esq] ){
            cont++;
            aux=vetor[i];
            vetor[i]=vetor[cont];
            vetor[cont]=aux;
        }
    }

    aux=vetor[esq];
    vetor[esq]=vetor[cont];
    vetor[cont]=aux;

    return cont;
}

void quick(int vetor[],int esq, int dir){
    int pos;
    if(esq < dir){
        pos = dividir(vetor,esq,dir);
        quick(vetor,esq,pos-1);
        quick(vetor,pos+1,dir);
    }
}
//--------------------------------------------------------------------------------------

// Função PREENCHE VETOR
void preenche_vetor(int vet[]){
	
	// Utilizando o random - sorteio para preencher o vetor
	int i,j;
	bool ok = true;
	srand(time(NULL));
	for(i=0; i<max; i++){
		
		vet[i] = rand()%max_rand;
	}
}


// Função IMPRIME VETOR
void imprime_vetor(int vet[]){
	int i, cont=0;
	
	printf("\n\n\n\t| ");
	for(i=0; i<max; i++){
		cont++;
		if(vet[i] < 10){
			printf("00%d | ", vet[i]);
		}
		else if(vet[i]<100){
			printf("0%d | ", vet[i]);
		}
		else{
			printf("%d | ", vet[i]);
		}
		if(cont%10==0){
			printf("\n");
			printf("\t| ");
		}
	}
}


int main() {
	
	printf("\n\t---------- | STUDYING SORT METHOD | ----------");
	printf("\n\t\t-------- | Welington Batista Pereira | --------\n\n");
	// Declaração de variáveis
	int i;
	int vetor[max];
	
	// Função - Preenche vetor
	printf("\n\n\n\n\t=====> SORTEANDO VALORES PARA O VETOR DE %d POSICOES \n\n", max);
	preenche_vetor(vetor);
	
	// Função Imprime - Vai exibir os valores sorteados para o vetor
	imprime_vetor(vetor);
	
	printf("\n\n\n\n\t=====> ORDENANDO VETOR \n\n", max);
	// Funão de ordenação - QUICKSORT
	int esq = 0, dir;
	quick_sort(vetor, esq, dir);

	// Função Imprime - Imprime números ordenados
	imprime_vetor(vetor);




	printf("\n\n\n");
	system("PAUSE");
	return 0;
}
