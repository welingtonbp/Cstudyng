#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <stdbool.h>

	// Valor da constate de máximo do vetor e valor máximo para sorteio de random
	const int max = 100;
	const int max_rand = 100;

// Função SHELL SORT--------------------------------------------------------------------
void shell_sort(int *vetor)
{
   int i = (max - 1) / 2;
   int chave, k, aux;
 
   while(i != 0)
   {
      do
      {
         chave = 1;
         for(k = 0; k < max - i; ++k)
         {
         	// Vai considerar como pivo o tamanho do vetor divido por 2, fazerndo a comparação para os valores superiores a metade
         	
            if(vetor[k] > vetor[k + i])
            {
               aux = vetor[k];
               vetor[k] = vetor[k + i];
               vetor[k + i] = aux;
               chave = 0;
            }
         }
      }while(chave == 0);
      // terminado , divide o pivô por 2 dinovo e faz o mesmo processo até chegar o pivo == 0
      i = i / 2;
   }
}
//--------------------------------------------------------------------------------------

// Função PREENCHE VETOR
void preenche_vetor(int vet[]){
	
	// Utilizando o random - sorteio para preencher o vetor
	int i,j;
	bool ok = true;
	srand(time(NULL));
	for(i=0; i<max; i++){
		
		vet[i] = rand()%max_rand;
	}
}


// Função IMPRIME VETOR
void imprime_vetor(int vet[]){
	int i, cont=0;
	
	printf("\n\n\n\t| ");
	for(i=0; i<max; i++){
		cont++;
		if(vet[i] < 10){
			printf("00%d | ", vet[i]);
		}
		else if(vet[i]<100){
			printf("0%d | ", vet[i]);
		}
		else{
			printf("%d | ", vet[i]);
		}
		if(cont%10==0){
			printf("\n");
			printf("\t| ");
		}
	}
}


int main() {
	
	printf("\n\t---------- | STUDYING SORT METHOD | ----------");
	printf("\n\t\t-------- | Welington Batista Pereira | --------\n\n");
	// Declaração de variáveis
	int i;
	int vetor[max];
	
	// Função - Preenche vetor
	printf("\n\n\n\n\t=====> SORTEANDO VALORES PARA O VETOR DE %d POSICOES \n\n", max);
	preenche_vetor(vetor);
	
	// Função Imprime - Vai exibir os valores sorteados para o vetor
	imprime_vetor(vetor);
	
	printf("\n\n\n\n\t=====> ORDENANDO VETOR \n\n", max);
	// Funão de ordenação - SHELLSORT
	shell_sort(vetor);

	// Função Imprime - Imprime números ordenados
	imprime_vetor(vetor);




	printf("\n\n\n");
	system("PAUSE");
	return 0;
}
